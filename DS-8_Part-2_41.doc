import java.util.Scanner;
public class Queue
{ 
    static Node head; 
    static Node last;
    static Node temp;
    
    static class Node 
    { 
        int data; 
        Node next; 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } 
    }
    
    public static Queue enqueue(Queue list, int data) 
    { 
        Node new_node = new Node(data);
        if (list.head == null) { 
            list.head = new_node;
            list.last = new_node;
        } 
        else 
        {  
            list.last.next = new_node;
            list.last = new_node;
        } 
        return list; 
    }
    
    public static Queue dequeue(Queue list) throws RuntimeException
    {
    	list.temp = list.head.next;
    	if(list.head == null)
    		System.out.println("The Queue is empty");
    	else {
    		System.out.println("The deleted element is :"+list.head.data);
    		list.head = temp; 
    	}
    	return list;
    }
    
    public static void print(Queue list) 
    { 
        Node currNode = list.head;  
        if(currNode == null)
        	System.out.println("Queue is empty");
        while (currNode != null) { 
            System.out.print(currNode.data + " "); 
            currNode = currNode.next; 
        } 
        System.out.println();
    }
    
    public static void main(String[] args) 
    { 
    	Queue list = new Queue();
		Scanner sc = new Scanner(System.in);
		while(true)
		{ 
			System.out.println("Enter your choice:");
			System.out.println("1.Enqueue | 2.Dequeue | 3.Print");
			int choice = sc.nextInt();
			switch(choice) {
			case 1: System.out.println("Enter a value for the Queue:");
					int i=sc.nextInt();
					if(i!=0)
						list = enqueue(list,i);
					else
						return;
					break;
			case 2: list = dequeue(list);
					break;
			case 3: System.out.println("The Queue is: ");
					print(list);
					break;
			default: System.out.println("Program Terminated"); 
					return;
			}
			
		}	
    } 
} 